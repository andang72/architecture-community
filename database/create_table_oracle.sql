


		drop table MUSI_USER cascade constraints PURGE ;
		drop table MUSI_ROLE cascade constraints PURGE ;
		drop table MUSI_USER_ROLES cascade constraints PURGE ;
		drop table MUSI_USER_LOGIN_TOKEN cascade constraints PURGE ;
		drop table MUSI_BOARD_THREAD cascade constraints PURGE ;
		drop table MUSI_BOARD_MESSAGE cascade constraints PURGE ;
		drop table MUSI_BOARD cascade constraints PURGE ;
		drop table MUSI_VIEWCOUNT cascade constraints PURGE ;
		drop table MUSI_COMMENT cascade constraints PURGE ;
		drop table MUSI_COMMENT_PROPERTY cascade constraints PURGE ;
		drop table MUSI_ATTACHMENT cascade constraints PURGE ;
		drop table MUSI_ATTACHMENT_DATA cascade constraints PURGE ;
		drop table MUSI_IMAGE cascade constraints PURGE ;
		drop table MUSI_IMAGE_DATA cascade constraints PURGE ;
		drop table MUSI_AVATARE_IMAGE cascade constraints PURGE ;
		drop table MUSI_AVATARE_IMAGE_DATA cascade constraints PURGE ;
		drop table MUSI_LOGO cascade constraints PURGE ;
		drop table MUSI_LOGO_DATA cascade constraints PURGE ;
		drop table MUSI_EXTERNAL_LINK cascade constraints PURGE ;
		
	-- =================================================  
	--   USER	
	-- =================================================	
			
		-- User
		CREATE TABLE MUSI_USER (
		  USER_ID                INTEGER NOT NULL,
		  USERNAME               VARCHAR2(100) NOT NULL,
		  PASSWORD_HASH          VARCHAR2(64)  NOT NULL,
		  NAME                   VARCHAR2(100),		  
		  NAME_VISIBLE           NUMBER(1, 0)  DEFAULT 1 ,
		  FIRST_NAME             VARCHAR2(100),		  
		  LAST_NAME              VARCHAR2(100),		
		  EMAIL                  VARCHAR2(100) NOT NULL,
		  EMAIL_VISIBLE          NUMBER(1, 0)  DEFAULT 1,
		  USER_ENABLED           NUMBER(1, 0)  DEFAULT 1, 
		  STATUS                 NUMBER(1, 0)  DEFAULT 0,
		  CREATION_DATE          DATE DEFAULT  SYSDATE NOT NULL,
		  MODIFIED_DATE          DATE DEFAULT  SYSDATE NOT NULL,		    
		  CONSTRAINT MUSI_USER_PK PRIMARY KEY (USER_ID)
		);		
		
		CREATE UNIQUE INDEX MUSI_USER_IDX_USERNAME ON MUSI_USER (USERNAME);
		
		COMMENT ON TABLE  "MUSI_USER"  IS '사용자 테이블';
		COMMENT ON COLUMN "MUSI_USER"."USER_ID" IS 'ID'; 
		COMMENT ON COLUMN "MUSI_USER"."USERNAME" IS '로그인 아이디'; 
        COMMENT ON COLUMN "MUSI_USER"."NAME" IS '전체 이름';
		COMMENT ON COLUMN "MUSI_USER"."PASSWORD_HASH" IS '암호화된 패스워드'; 
        COMMENT ON COLUMN "MUSI_USER"."NAME_VISIBLE" IS '이름 공개 여부';        
		COMMENT ON COLUMN "MUSI_USER"."FIRST_NAME" IS '이름'; 
        COMMENT ON COLUMN "MUSI_USER"."LAST_NAME" IS '성';        
		COMMENT ON COLUMN "MUSI_USER"."EMAIL" IS '메일주소'; 
        COMMENT ON COLUMN "MUSI_USER"."EMAIL_VISIBLE" IS '메일주소 공개여부';           
		COMMENT ON COLUMN "MUSI_USER"."USER_ENABLED" IS '계정 사용여부';     
        COMMENT ON COLUMN "MUSI_USER"."STATUS" IS '계정 상태';	    
        COMMENT ON COLUMN "MUSI_USER"."CREATION_DATE" IS '생성일자';	    
        COMMENT ON COLUMN "MUSI_USER"."MODIFIED_DATE" IS '수정일자';	
        
        -- Role
		CREATE TABLE MUSI_ROLE (
		  ROLE_ID                     INTEGER NOT NULL,
		  NAME                        VARCHAR2(100)   NOT NULL,
		  DESCRIPTION              VARCHAR2(1000)  NOT NULL,
		  CREATION_DATE           DATE DEFAULT  SYSDATE NOT NULL,
		  MODIFIED_DATE           DATE DEFAULT  SYSDATE NOT NULL,	
		  CONSTRAINT MUSI_ROLE_PK PRIMARY KEY (ROLE_ID)
		);
		
		COMMENT ON TABLE "MUSI_ROLE"  IS '롤 테이블';
		COMMENT ON COLUMN "MUSI_ROLE"."ROLE_ID" IS '롤 ID'; 
		COMMENT ON COLUMN "MUSI_ROLE"."NAME" IS '롤 이름'; 
		COMMENT ON COLUMN "MUSI_ROLE"."DESCRIPTION" IS '설명'; 	
		COMMENT ON COLUMN "MUSI_ROLE"."CREATION_DATE" IS '생성일자'; 
		COMMENT ON COLUMN "MUSI_ROLE"."MODIFIED_DATE" IS '수정일자'; 				
		
		CREATE UNIQUE INDEX MUSI_ROLE_NAME_IDX ON V2_ROLE (NAME)
		
		-- User Roles 
		CREATE TABLE MUSI_USER_ROLES (
		  USER_ID                 INTEGER NOT NULL,
		  ROLE_ID                 INTEGER NOT NULL,
		  CONSTRAINT MUSI_USER_ROLES_PK PRIMARY KEY (USER_ID, ROLE_ID)
		);

		COMMENT ON TABLE "MUSI_USER_ROLES"  IS '사용자 롤 테이블';
		COMMENT ON COLUMN "MUSI_USER_ROLES"."USER_ID" IS '그룹 ID'; 
		COMMENT ON COLUMN "MUSI_USER_ROLES"."ROLE_ID" IS '롤 ID'; 
		
		
		-- User remember me
		CREATE TABLE MUSI_USER_LOGIN_TOKEN (
			UUID			VARCHAR2(100) NOT NULL,
			USERNAME		VARCHAR2(100) NOT NULL, 
		 	TOKEN 			VARCHAR2(100) NOT NULL, 
		 	LAST_USE_DATE	TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
		);
 
		COMMENT ON TABLE "MUSI_USER_LOGIN_TOKEN"  IS '인증 정보 저장 테이블';
		COMMENT ON COLUMN "MUSI_USER_LOGIN_TOKEN"."UUID" IS '시퀀스 값'; 
		COMMENT ON COLUMN "MUSI_USER_LOGIN_TOKEN"."USERNAME" IS '로그인아이디'; 	
		COMMENT ON COLUMN "MUSI_USER_LOGIN_TOKEN"."TOKEN" IS '인증 토큰 값'; 
		COMMENT ON COLUMN "MUSI_USER_LOGIN_TOKEN"."LAST_USE_DATE" IS '마지막 사용일자'; 	
		
	-- =================================================  
	--  BOARD	
	-- =================================================	
		CREATE TABLE MUSI_BOARD_THREAD (
			THREAD_ID			INTEGER NOT NULL,
		  	OBJECT_TYPE			INTEGER NOT NULL,
		 	OBJECT_ID			INTEGER NOT NULL,
		  	ROOT_MESSAGE_ID		INTEGER NOT NULL,
		  	CREATION_DATE		TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
		  	MODIFIED_DATE		TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
		 	CONSTRAINT MUSI_BOARD_THREAD_PK PRIMARY KEY (THREAD_ID)
		);

		COMMENT ON TABLE "MUSI_BOARD_THREAD"  IS '게시물 스레드(토픽) 테이블';
		COMMENT ON COLUMN "MUSI_BOARD_THREAD"."THREAD_ID" IS '게시물 스레드 ID'; 
		COMMENT ON COLUMN "MUSI_BOARD_THREAD"."OBJECT_TYPE" IS '게시물이 속하는 객체 유형'; 	
		COMMENT ON COLUMN "MUSI_BOARD_THREAD"."OBJECT_ID" IS '게시물이 속하는 객체 ID'; 	
		COMMENT ON COLUMN "MUSI_BOARD_THREAD"."ROOT_MESSAGE_ID" IS '최초 게시물 ID'; 
		COMMENT ON COLUMN "MUSI_BOARD_THREAD"."CREATION_DATE" IS '생성일자'; 
		COMMENT ON COLUMN "MUSI_BOARD_THREAD"."MODIFIED_DATE" IS '수정일자'; 
		
		
		CREATE TABLE MUSI_BOARD_MESSAGE (
			MESSAGE_ID			INTEGER NOT NULL,
		    PARENT_MESSAGE_ID	INTEGER NOT NULL,
		    THREAD_ID			INTEGER NOT NULL,
		    OBJECT_TYPE			INTEGER NOT NULL,
		    OBJECT_ID			INTEGER NOT NULL,
		    USER_ID				INTEGER NOT NULL,
		    SUBJECT				VARCHAR2(255),
		    BODY				CLOB,
		    CREATION_DATE		TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
		    MODIFIED_DATE		TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
		 	CONSTRAINT MUSI_BOARD_MESSAGE_PK PRIMARY KEY (MESSAGE_ID)
		);

		COMMENT ON TABLE "MUSI_BOARD_MESSAGE"  IS '게시물 테이블';
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."MESSAGE_ID" IS '게시물 ID'; 
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."PARENT_MESSAGE_ID" IS '부모 게시물 ID'; 
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."THREAD_ID" IS '게시물 스레드 ID'; 
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."OBJECT_TYPE" IS '게시물이 속하는 객체 유형'; 	
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."OBJECT_ID" IS '게시물이 속하는 객체 ID'; 	
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."USER_ID" IS '게시자 ID'; 	
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."SUBJECT" IS '제목'; 	
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."BODY" IS '내용'; 	
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."CREATION_DATE" IS '생성일자'; 
		COMMENT ON COLUMN "MUSI_BOARD_MESSAGE"."MODIFIED_DATE" IS '수정일자'; 
		
		
		CREATE INDEX MUSI_BOARD_MESSAGE_IDX_01 ON MUSI_BOARD_MESSAGE (THREAD_ID);
		CREATE INDEX MUSI_BOARD_MESSAGE_IDX_02 ON MUSI_BOARD_MESSAGE (USER_ID);
		CREATE INDEX MUSI_BOARD_MESSAGE_IDX_03 ON MUSI_BOARD_MESSAGE (PARENT_MESSAGE_ID);
		CREATE INDEX MUSI_BOARD_MESSAGE_IDX_04 ON MUSI_BOARD_MESSAGE (OBJECT_TYPE, OBJECT_ID, MODIFIED_DATE);
		
		-- BOARD
		DROP TABLE MUSI_BOARD;
		
		CREATE TABLE MUSI_BOARD (
			BOARD_ID                INTEGER NOT NULL,
			NAME					VARCHAR2(255) NOT NULL, 
		 	DISPLAY_NAME 			VARCHAR2(255) NOT NULL, 
		 	DESCRIPTION             VARCHAR2(1000) ,
		 	CREATION_DATE           DATE DEFAULT  SYSDATE NOT NULL,
		  	MODIFIED_DATE           DATE DEFAULT  SYSDATE NOT NULL,
		 	CONSTRAINT MUSI_BOARD_PK PRIMARY KEY (BOARD_ID)
		);
		
		COMMENT ON TABLE "MUSI_BOARD"  IS '게시판 테이블';
		COMMENT ON COLUMN "MUSI_BOARD"."BOARD_ID" IS '게시판 ID'; 
		COMMENT ON COLUMN "MUSI_BOARD"."NAME" IS '게시판 이름'; 
		COMMENT ON COLUMN "MUSI_BOARD"."DISPLAY_NAME" IS '게시판 화면 출력 이름'; 
		COMMENT ON COLUMN "MUSI_BOARD"."DESCRIPTION" IS '설명'; 	
		COMMENT ON COLUMN "MUSI_BOARD"."CREATION_DATE" IS '생성일자'; 
		COMMENT ON COLUMN "MUSI_BOARD"."MODIFIED_DATE" IS '수정일자'; 
		
		
		CREATE INDEX MUSI_BOARD_NAME_IDX ON MUSI_BOARD (NAME);

		
	CREATE TABLE MUSI_BOARD_PROPERTY (
	  BOARD_ID               INTEGER NOT NULL,
	  PROPERTY_NAME          VARCHAR2(100)   NOT NULL,
	  PROPERTY_VALUE         VARCHAR2(1024)  NOT NULL,
	  CONSTRAINT MUSI_BOARD_PROPERTY_PK PRIMARY KEY (BOARD_ID, PROPERTY_NAME)
	);	
	
	COMMENT ON TABLE  "MUSI_BOARD_PROPERTY"  IS 'BOARD 프로퍼티 테이블';
	COMMENT ON COLUMN "MUSI_BOARD_PROPERTY"."BOARD_ID" IS 'BOARD ID'; 
	COMMENT ON COLUMN "MUSI_BOARD_PROPERTY"."PROPERTY_NAME" IS '프로퍼티 이름'; 
	COMMENT ON COLUMN "MUSI_BOARD_PROPERTY"."PROPERTY_VALUE" IS '프로퍼티 값'; 		
	
	
	-- =================================================  
	--  VIEWCOUNT	
	-- =================================================	
		CREATE TABLE MUSI_VIEWCOUNT(	
			ENTITY_TYPE					INTEGER NOT NULL,
			ENTITY_ID					INTEGER NOT NULL,
			VIEWCOUNT					INTEGER NOT NULL,
			CONSTRAINT MUSI_VIEWCOUNT_PK PRIMARY KEY (ENTITY_TYPE, ENTITY_ID)
   		);		
   		
   		COMMENT ON TABLE "MUSI_VIEWCOUNT"  IS '뷰 카운트 테이블';
		COMMENT ON COLUMN "MUSI_VIEWCOUNT"."ENTITY_TYPE" IS '객체 타입'; 
		COMMENT ON COLUMN "MUSI_VIEWCOUNT"."ENTITY_ID" IS '객체 아이디'; 
		COMMENT ON COLUMN "MUSI_VIEWCOUNT"."VIEWCOUNT" IS '카운트'; 
		
		
	-- =================================================  
	--  COMMENT	
	-- =================================================	
	CREATE TABLE MUSI_COMMENT(	
		COMMENT_ID					INTEGER NOT NULL,		
		OBJECT_TYPE					INTEGER NOT NULL,
		OBJECT_ID						INTEGER NOT NULL,
		PARENT_COMMENT_ID		INTEGER,
		PARENT_OBJECT_TYPE		INTEGER,
		PARENT_OBJECT_ID			INTEGER,
		USER_ID							INTEGER,
		NAME							VARCHAR2(100),
		EMAIL							VARCHAR2(255),
		URL								VARCHAR2(255),
		IP								VARCHAR2(15),
		BODY                            VARCHAR2(4000),
		STATUS							INTEGER NOT NULL, 
		CREATION_DATE				DATE DEFAULT  SYSDATE NOT NULL,
		MODIFIED_DATE				DATE DEFAULT  SYSDATE NOT NULL,		
		CONSTRAINT MUSI_COMMENT_PK PRIMARY KEY (COMMENT_ID)
   );	
   
	CREATE INDEX MUSI_COMMENT_IDX1 ON MUSI_COMMENT (CREATION_DATE) ;
	CREATE INDEX MUSI_COMMENT_IDX2 ON MUSI_COMMENT (MODIFIED_DATE) ;
	CREATE INDEX MUSI_COMMENT_IDX3 ON MUSI_COMMENT (OBJECT_TYPE, OBJECT_ID) ;
	CREATE INDEX MUSI_COMMENT_IDX4 ON MUSI_COMMENT (PARENT_OBJECT_TYPE, PARENT_OBJECT_ID) ;
	CREATE INDEX MUSI_COMMENT_IDX5 ON MUSI_COMMENT (USER_ID) ;
	
	CREATE TABLE MUSI_COMMENT_PROPERTY (
	  COMMENT_ID               INTEGER NOT NULL,
	  PROPERTY_NAME          VARCHAR2(100)   NOT NULL,
	  PROPERTY_VALUE         VARCHAR2(1024)  NOT NULL,
	  CONSTRAINT MUSI_COMMENT_PROPERTY_PK PRIMARY KEY (COMMENT_ID, PROPERTY_NAME)
	);	
	
	COMMENT ON TABLE      "MUSI_COMMENT_PROPERTY"  IS 'COMMENT 프로퍼티 테이블';
	COMMENT ON COLUMN "MUSI_COMMENT_PROPERTY"."COMMENT_ID" IS 'COMMENT ID'; 
	COMMENT ON COLUMN "MUSI_COMMENT_PROPERTY"."PROPERTY_NAME" IS '프로퍼티 이름'; 
	COMMENT ON COLUMN "MUSI_COMMENT_PROPERTY"."PROPERTY_VALUE" IS '프로퍼티 값'; 		
	
	
	-- =================================================  
	--  ATTACHEMENT 	
	-- =================================================		
	CREATE TABLE MUSI_ATTACHMENT (
	    ATTACHMENT_ID		     INTEGER NOT NULL,
		OBJECT_TYPE              INTEGER NOT NULL,
		OBJECT_ID                INTEGER NOT NULL,	    		
		CONTENT_TYPE             VARCHAR2(255)  NOT NULL,			  
		FILE_NAME                VARCHAR2(255)   NOT NULL,
		FILE_SIZE                INTEGER   NOT NULL,
		USER_ID					 INTEGER NOT NULL,	 	
		CREATION_DATE            DATE DEFAULT  SYSDATE NOT NULL,
		MODIFIED_DATE            DATE DEFAULT  SYSDATE NOT NULL,	
	   CONSTRAINT MUSI_ATTACHMENT_PK PRIMARY KEY (ATTACHMENT_ID)	    
    );
	    
   
    CREATE INDEX MUSI_ATTACHMENT_IDX1 ON MUSI_ATTACHMENT( OBJECT_TYPE, OBJECT_ID ) ;	
	COMMENT ON TABLE "MUSI_ATTACHMENT"  IS '첨부파일 테이블';
	COMMENT ON COLUMN "MUSI_ATTACHMENT"."ATTACHMENT_ID" IS 'ID'; 
	COMMENT ON COLUMN "MUSI_ATTACHMENT"."OBJECT_TYPE" IS '첨부파일과 연관된 모델 유형'; 
    COMMENT ON COLUMN "MUSI_ATTACHMENT"."OBJECT_ID" IS '첨부파일과 연관된 모델 ID';
	COMMENT ON COLUMN "MUSI_ATTACHMENT"."FILE_NAME" IS '첨부파일 이름'; 
    COMMENT ON COLUMN "MUSI_ATTACHMENT"."FILE_SIZE" IS '첨부파일 크기';        
	COMMENT ON COLUMN "MUSI_ATTACHMENT"."CONTENT_TYPE" IS 'CONTENT TYPE 값'; 
	COMMENT ON COLUMN "MUSI_ATTACHMENT"."CREATION_DATE" IS '생성일'; 
    COMMENT ON COLUMN "MUSI_ATTACHMENT"."MODIFIED_DATE" IS '수정일';

    CREATE TABLE MUSI_ATTACHMENT_PROPERTY (
		ATTACHMENT_ID          INTEGER NOT NULL,
		PROPERTY_NAME          VARCHAR2(100)   NOT NULL,
		PROPERTY_VALUE         VARCHAR2(1024)  NOT NULL,
		CONSTRAINT MUSI_ATTACHMENT_PROPERTY_PK PRIMARY KEY (ATTACHMENT_ID, PROPERTY_NAME)
	);	
	
	COMMENT ON TABLE      "MUSI_ATTACHMENT_PROPERTY"  IS '첨부파일 프로퍼티 테이블';
	COMMENT ON COLUMN "MUSI_ATTACHMENT_PROPERTY"."ATTACHMENT_ID" IS '첨부파일 ID'; 
	COMMENT ON COLUMN "MUSI_ATTACHMENT_PROPERTY"."PROPERTY_NAME" IS '프로퍼티 이름'; 
	COMMENT ON COLUMN "MUSI_ATTACHMENT_PROPERTY"."PROPERTY_VALUE" IS '프로퍼티 값'; 		

	CREATE TABLE MUSI_ATTACHMENT_DATA (
		ATTACHMENT_ID               	INTEGER NOT NULL,
		ATTACHMENT_DATA               	BLOB,
		CONSTRAINT MUSI_ATTACHMENT_DATA_PK PRIMARY KEY (ATTACHMENT_ID)
	);		        
		
	COMMENT ON TABLE "MUSI_ATTACHMENT_DATA"  IS '첨부파일 데이터 테이블';
	COMMENT ON COLUMN "MUSI_ATTACHMENT_DATA"."ATTACHMENT_ID" IS 'ID'; 
	COMMENT ON COLUMN "MUSI_ATTACHMENT_DATA"."ATTACHMENT_DATA" IS '첨부파일 데이터'; 		
		
	-- =================================================  
	--  IMAGE	
	-- =================================================		
		
	CREATE TABLE MUSI_IMAGE (
		IMAGE_ID                 INTEGER NOT NULL,
		OBJECT_TYPE              INTEGER NOT NULL,
		OBJECT_ID                INTEGER NOT NULL,
		FILE_NAME                VARCHAR2(255)   NOT NULL,
		FILE_SIZE                INTEGER   NOT NULL,
		CONTENT_TYPE             VARCHAR2(50)  NOT NULL,			  
		USER_ID				   	 INTEGER NOT NULL,	 	
		CREATION_DATE            DATE DEFAULT  SYSDATE NOT NULL,
		MODIFIED_DATE            DATE DEFAULT  SYSDATE NOT NULL,	
		CONSTRAINT MUSI_IMAGE_PK PRIMARY KEY (IMAGE_ID)
	);		        
		
		
		CREATE INDEX MUSI_IMAGE_IDX1 ON MUSI_IMAGE( OBJECT_TYPE, OBJECT_ID ) ;	
		COMMENT ON TABLE "MUSI_IMAGE"  IS '이미지 테이블';
		COMMENT ON COLUMN "MUSI_IMAGE"."IMAGE_ID" IS 'ID'; 
		COMMENT ON COLUMN "MUSI_IMAGE"."OBJECT_TYPE" IS '이미지와 연관된 모델 유형'; 
        COMMENT ON COLUMN "MUSI_IMAGE"."OBJECT_ID" IS '이미지와 연관된 모델 ID';
		COMMENT ON COLUMN "MUSI_IMAGE"."FILE_NAME" IS '이미지 파일 이름'; 
        COMMENT ON COLUMN "MUSI_IMAGE"."FILE_SIZE" IS '이미지 파일 크기';        
		COMMENT ON COLUMN "MUSI_IMAGE"."CONTENT_TYPE" IS 'CONTENT TYPE 값'; 
		COMMENT ON COLUMN "MUSI_IMAGE"."CREATION_DATE" IS '생성일'; 
        COMMENT ON COLUMN "MUSI_IMAGE"."MODIFIED_DATE" IS '수정일';
        
        CREATE TABLE MUSI_IMAGE_DATA (
			  IMAGE_ID                    INTEGER NOT NULL,
			  IMAGE_DATA               BLOB,
			  CONSTRAINT MUSI_IMAGE_DATA_PK PRIMARY KEY (IMAGE_ID)
		);		        
		
		COMMENT ON TABLE "MUSI_IMAGE_DATA"  IS '이미지 데이터 테이블';
		COMMENT ON COLUMN "MUSI_IMAGE_DATA"."IMAGE_ID" IS 'ID'; 
		COMMENT ON COLUMN "MUSI_IMAGE_DATA"."IMAGE_DATA" IS '이미지 데이터'; 		
		

		
	-- =================================================  
	--  AVATAR IMAGE	
	-- =================================================	
			
		CREATE TABLE MUSI_AVATAR_IMAGE (
			  AVATAR_IMAGE_ID          INTEGER NOT NULL,
			  USER_ID                  INTEGER NOT NULL,
			  PRIMARY_IMAGE            NUMBER(1, 0)  DEFAULT 1,
			  FILE_NAME                VARCHAR2(255)   NOT NULL,
			  FILE_SIZE                INTEGER   NOT NULL,
			  CONTENT_TYPE             VARCHAR2(50)  NOT NULL,			  
			  CREATION_DATE            DATE DEFAULT  SYSDATE NOT NULL,
			  MODIFIED_DATE            DATE DEFAULT  SYSDATE NOT NULL,	
			  CONSTRAINT MUSI_AVATAR_IMAGE_PK PRIMARY KEY (AVATAR_IMAGE_ID)
		);		        
				
		CREATE INDEX MUSI_AVATAR_IMAGE_IDX1 ON MUSI_AVATAR_IMAGE( USER_ID ) ;	
		
		COMMENT ON TABLE "MUSI_AVATAR_IMAGE"  IS '아바타 이미지 테이블';
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE"."AVATAR_IMAGE_ID" IS 'ID'; 
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE"."USER_ID" IS '사용자 ID';
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE"."PRIMARY_IMAGE" IS '주 이미지 여부'; 
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE"."FILE_NAME" IS '이미지 파일 이름'; 
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE"."FILE_SIZE" IS '이미지 파일 크기';        
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE"."CONTENT_TYPE" IS 'CONTENT TYPE 값'; 
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE"."CREATION_DATE" IS '생성일'; 
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE"."MODIFIED_DATE" IS '수정일';
        
		CREATE TABLE MUSI_AVATAR_IMAGE_DATA (
			AVATAR_IMAGE_ID         INTEGER NOT NULL,
			AVATAR_IMAGE_DATA       BLOB,
			CONSTRAINT MUSI_AVATAR_IMAGE_DATA_PK PRIMARY KEY (AVATAR_IMAGE_ID)
		);		        
		
		COMMENT ON TABLE "MUSI_AVATAR_IMAGE_DATA"  IS '아바타 이미지 데이터 테이블';
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE_DATA"."AVATAR_IMAGE_ID" IS 'ID'; 
		COMMENT ON COLUMN "MUSI_AVATAR_IMAGE_DATA"."AVATAR_IMAGE_DATA" IS '이미지 데이터'; 		
		

		
		
		CREATE TABLE MUSI_LOGO (
			  LOGO_ID                    INTEGER NOT NULL,
			  OBJECT_TYPE                INTEGER NOT NULL,
			  OBJECT_ID                   INTEGER NOT NULL,
			  PRIMARY_IMAGE           	NUMBER(1, 0)  DEFAULT 1,
			  FILE_NAME                   VARCHAR2(255)   NOT NULL,
			  FILE_SIZE                      INTEGER   NOT NULL,
			  CONTENT_TYPE             VARCHAR2(50)  NOT NULL,			  
			  CREATION_DATE            DATE DEFAULT  SYSDATE NOT NULL,
			  MODIFIED_DATE            DATE DEFAULT  SYSDATE NOT NULL,	
			  CONSTRAINT MUSI_LOGO_PK PRIMARY KEY (LOGO_ID)
		);			
		
		CREATE INDEX MUSI_LOGO_IDX1 ON MUSI_LOGO( OBJECT_TYPE, OBJECT_ID ) ;	
		CREATE INDEX MUSI_LOGO_IDX2 ON MUSI_LOGO( OBJECT_TYPE, OBJECT_ID, PRIMARY_IMAGE ) ;	

		COMMENT ON TABLE "MUSI_LOGO"  IS '로고 이미지 데이터 테이블';
		COMMENT ON COLUMN "MUSI_LOGO"."LOGO_ID" IS 'ID'; 
		COMMENT ON COLUMN "MUSI_LOGO"."OBJECT_TYPE" IS '이미지와 연관된 모델 유형'; 
        COMMENT ON COLUMN "MUSI_LOGO"."OBJECT_ID" IS '이미지와 연관된 모델 ID';
        COMMENT ON COLUMN "MUSI_LOGO"."PRIMARY_IMAGE" IS '주 이미지 여부' ; 
		COMMENT ON COLUMN "MUSI_LOGO"."FILE_NAME" IS '이미지 파일 이름'; 
        COMMENT ON COLUMN "MUSI_LOGO"."FILE_SIZE" IS '이미지 파일 크기';        
		COMMENT ON COLUMN "MUSI_LOGO"."CONTENT_TYPE" IS 'CONTENT TYPE 값'; 
		COMMENT ON COLUMN "MUSI_LOGO"."CREATION_DATE" IS '생성일'; 
        COMMENT ON COLUMN "MUSI_LOGO"."MODIFIED_DATE" IS '수정일';
		
		CREATE TABLE MUSI_LOGO_DATA (
			LOGO_ID			INTEGER NOT NULL,
			LOGO_DATA		BLOB,
			CONSTRAINT MUSI_LOGO_DATA_PK PRIMARY KEY (LOGO_ID)
		);	
	    COMMENT ON TABLE "MUSI_LOGO_DATA"  IS '로고 이미지 데이터 테이블';
		COMMENT ON COLUMN "MUSI_LOGO_DATA"."LOGO_ID" IS 'ID'; 
		COMMENT ON COLUMN "MUSI_LOGO_DATA"."LOGO_DATA" IS '이미지 데이터'; 	 
		
	-- =================================================  
	--  EXTERNAL_LINK	
	-- =================================================	
		CREATE TABLE MUSI_EXTERNAL_LINK ( 
			LINK_ID						VARCHAR2(255)	NOT NULL, 
			OBJECT_TYPE					INTEGER NOT NULL,		
			OBJECT_ID                INTEGER NOT NULL,
			PUBLIC_SHARED			NUMBER(1, 0)  DEFAULT 1,
			CONSTRAINT MUSI_LINK_ID_PK PRIMARY KEY (LINK_ID)
		); 		
		
		CREATE UNIQUE INDEX MUSI_EXTERNAL_LINK_IDX1 ON MUSI_EXTERNAL_LINK (OBJECT_TYPE, OBJECT_ID);
		
		COMMENT ON TABLE "MUSI_EXTERNAL_LINK"  IS '외부 링크 테이블';
		COMMENT ON COLUMN "MUSI_EXTERNAL_LINK"."LINK_ID" IS '링크 아이디'; 
		COMMENT ON COLUMN "MUSI_EXTERNAL_LINK"."OBJECT_TYPE" IS '객체타입'; 	
		COMMENT ON COLUMN "MUSI_EXTERNAL_LINK"."OBJECT_ID" IS '객체 아이디'; 	
		COMMENT ON COLUMN "MUSI_EXTERNAL_LINK"."PUBLIC_SHARED" IS '공개여부'; 	
	
		